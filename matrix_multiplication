#include <iostream>
#include <bits/stdc++.h>
using namespace std;

// long double **multiply(long double **a, long double **b){
// 	long double **ans = (long double **)malloc(sizeof(long double *)*3);
// 	for(int i=0;i<3;i++)ans[i] = (long double *)malloc(sizeof(long double)*3);
// 	for(int i=0;i<3;i++){
// 		for(int j=0;j<3;j++){
// 			long double cell_value = 0;
// 			for(int k = 0;k<3;k++) cell_value += a[i][k]*b[k][j];
// 			ans[i][j] = cell_value;
// 		}
// 	}
// 	return ans;
// }
long double **matrix_power(long double a[3][3], int power){
	if(power == 1){
		long double **c =  (long double**)malloc(sizeof(long double *)*3);
		for(int i=0;i<3;i++)c[i] = (long double *)malloc(sizeof(long double)*3);
		for(int i=0;i<3;i++){
			for(int j=0;j<3;j++)c[i][j] = a[i][j];
		}
		return c;
	}

	long double **y = matrix_power(a, power/2);
	long double **ans = (long double **)malloc(sizeof(long double *)*3);
	for(int i=0;i<3;i++)ans[i] = (long double *)malloc(sizeof(long double)*3);	
	
	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			long double cell_value = 0;
			for(int k = 0;k<3;k++) cell_value += y[i][k]*y[k][j];
			ans[i][j] = cell_value;
			}
		}
	if(power&1){
	long double **ans1 = (long double **)malloc(sizeof(long double *)*3);
	for(int i=0;i<3;i++)ans1[i] = (long double *)malloc(sizeof(long double)*3);
		for(int i=0;i<3;i++){
			for(int j=0;j<3;j++){
				long double cell_value = 0;
				for(int k = 0;k<3;k++) cell_value += ans[i][k]*a[k][j];
				ans1[i][j] = cell_value;
			}
		}
		return ans1;
	}
	return ans;

}
int main(){
    long double a[3][3] = {
    	{5.4, -0.3, -4.1},
    	{2.9, 0.5, -2.4},
    	{6.3, -0.3, -5.0}
    };
	 
	int power = 1000;


	long double **ans = matrix_power(a, power);
	// cout << 2;
	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			cout << ans[i][j]<<' ';
		}
		cout << '\n';
	}
}
